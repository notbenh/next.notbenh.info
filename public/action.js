// Generated by CoffeeScript 1.6.3
var Terminal, actions, getRandomInt;

Terminal = (function() {
  function Terminal(id, options) {
    this.id = id;
    this.options = options;
    $(this.id).terminal(this.callback, this.options);
  }

  Terminal.prototype.callback = function(comand, term) {
    return console.info('HOLLA!');
  };

  return Terminal;

})();

/*
    $('#terminal').terminal(function(command, term) {
        args = command.split(' ');
        verb = args.shift();

        if (command !== '') {
            try {
                //var result = window.eval(verb + '(args)'); 
                var result = window.eval('actions.' + verb + '.action(args)'); 
                if (result !== undefined) {
                    term.echo(new String(result));
                }
            } catch(e) {
                term.error(new String(e));
            }
        } else {
           term.echo('');
        }
    }, {
        greetings: 'notbenh.info: do things by typing (if you get lost ask for "help")',
        name: 'notbenh_shell',
        prompt: '> '});
*/


getRandomInt = function(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
};

actions = {
  roll: {
    GOAL: 'roll some dice',
    EXAMPLES: ['roll d20', 'roll 3d10', 'roll 5d2 d4 d13'],
    SYNTAX: 'a die is defined by "d" followed by a digit. you can roll the same die multiple times by preceding the die with the number of times to roll',
    TODO: 'currently roll with out any arguments does not do anything, should give you the help text or at least tell you why you got nothing',
    action: function(dice) {
      var count, die, parse, results;
      if (dice != null) {
        return '!!! AKK HELP !!!';
      }
      results = (function() {
        var _i, _len, _ref, _results;
        _results = [];
        for (_i = 0, _len = dice.length; _i < _len; _i++) {
          die = dice[_i];
          if (die === 'barrel') {
            _results.push('link to rep');
          } else {
            parse = /^(\d*)?d(\d+)/.exec(die);
            count = (_ref = parse[1]) != null ? _ref : 1;
            console.info(die, count, parse);
            _results.push((function() {
              var _j, _results1;
              _results1 = [];
              for (_j = 1; 1 <= count ? _j <= count : _j >= count; 1 <= count ? _j++ : _j--) {
                _results1.push("d" + parse[2] + ": " + (getRandomInt(1, parse[2])) + "\n");
              }
              return _results1;
            })());
          }
        }
        return _results;
      })();
      return results.join("\n");
    }
  }
};
